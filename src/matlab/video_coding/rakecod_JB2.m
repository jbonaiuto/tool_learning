function data_idx=rakecod()

%date format 'dd-mm-yyyy'

% date_data={};
% for i=1:length(dates)
    %videocod_file=fullfile(C:\Users\kirchher\project\video_coding\,sprintf('fr_b_%s_%s_whole_trial.mat',array,dates{i})));
    %videocod_file = 'motor_rake_20190515_15-05-2019_SK.xlsx';
    videocod_file='C:\Users\kirchher\project\video_coding\table\VideoCoding_May\motor_rake_20190516_16-05-2019_SK.xlsx';
    videocod = readtable(videocod_file);

% PerfectTrials = videocod.ValidVideo==1 & ...
%                 videocod.DoesTheTask==1 & ...
%                 videocod.Success==1 & ...
%                 videocod.MoveTowardTarget==1 & ...
%                 videocod.RakePulled==1 & ...
%                 videocod.Groove_graspPriority==1 &...
%                 videocod.MultipleAttempts==0 & ...
%                 videocod.PlaceTarget==0 & ...
%                 videocod.ShaftCorrection==0 & ...
%                 videocod.MissTarget==0 & ...
%                 videocod.HitTarget==0 & ...
%                 videocod.Volte==0 & ...
%                 videocod.ExpInterv==0 & ...
%                 videocod.RakeGuidance==0 & ...
%                 videocod.RakeOnlyTouchedOrGrasped==0 & ...
%                 ~strcmp(videocod.RakeStarting,'17');

% SterotypedPull = videocod.ValidTrial==1 & ...
%                 videocod.Success==0 & ...
%                 videocod.MoveTowardTarget==0 & ...
%                 videocod.StereotypedPulling==1 & ...
%                 videocod.MultipleAttempts==0 & ...
%                 videocod.PlaceTarget==0 & ...
%                 videocod.ShaftCorrection==0 & ...
%                 videocod.MissTarget==0 & ...
%                 strcmp(videocod.HitTarget,'0') & ...
%                 strcmp(videocod.Volte,'0') & ...
%                 videocod.ExpInterv==0 & ...
%                 videocod.RakeGuidance==0 & ...
%                 videocod.RakeOnlyTouchedOrGrasped==0 & ...
%                 strcmp(videocod.TargetStarting,'b');
            
% AlignedTrial = videocod.ValidTrial==1 & ...
%                 videocod.DoesTheTask==1 & ...
%                 videocod.Success==1 & ...
%                 videocod.MoveTowardTarget==0 & ...
%                 videocod.RakePulled==1 & ...
%                 videocod.MultipleAttempts==0 & ...
%                 videocod.ShaftCorrection==0 & ...
%                 videocod.MissTarget==0 & ...
%                 strcmp(videocod.HitTarget,'0') & ...
%                 strcmp(videocod.Volte,'0') & ...
%                 videocod.ExpInterv==0 & ...
%                 videocod.RakeGuidance==0 & ...
%                 videocod.RakeOnlyTouchedOrGrasped==0 & ...
%                 videocod.TouchRakeHead==0 & ...
%                 videocod.PulledInSteps==0 & ...
%                 videocod.ShaftCorrection==0 & ...
%                 strcmp(videocod.ReleaseTheRake,'0') & ...
%                 strcmp(videocod.SpasmHandle,'0');
            
AlignedTrial = videocod.ValidTrial==1 & ...
                videocod.DoesTheTask==1 & ...
                videocod.Success==1 & ...
                videocod.MoveTowardTarget==0 & ...
                videocod.RakePulled==1 & ...
                videocod.MultipleAttempts==0 & ...
                videocod.ShaftCorrection==0 & ...
                videocod.MissTarget==0 & ...
                videocod.ExpInterv==0 & ...
                videocod.RakeGuidance==0 & ...
                videocod.RakeOnlyTouchedOrGrasped==0 & ...
                videocod.TouchRakeHead==0 & ...
                videocod.PulledInSteps==0 & ...
                videocod.ShaftCorrection==0;

            
% PerfectTrials_idx = find(PerfectTrials);
%SterotypedPull_idx = find(SterotypedPull);
AlignedTrial_idx = find(AlignedTrial);

%PerfectTrials_list = videocod.Date(PerfectTrials_idx);
%SterotypedPull_list = videocod.Date(SterotypedPull_idx);
AlignedTrial_list = videocod.Date(AlignedTrial_idx);

for i=1:length(AlignedTrial_list)
    ATofinterest=AlignedTrial_list(i);
    ATcropped=ATofinterest{1,1}(10:end);
    AlignedTrial_list{i}=ATcropped;
end

%trial_info_file = 'trial_info.csv';
trial_info_file = 'E:\project\tool_learning\data\preprocessed_data\betta\16.05.19\trial_info.csv';
%trial_info = readtable(trial_info_file, 'ReadVariableNames', true, 'delimiter','comma');
trial_info = readtable(trial_info_file, 'PreserveVariableNames', true, 'delimiter','comma');

% List of trial indices (for videos mapped to a good trial)
AT_trial_idx=[];
for i=1:length(AlignedTrial_list)
    % Find trial for this video
    AT_Trial=find(strcmp(trial_info.video, AlignedTrial_list{i}));
    % If trial found and it's good - add to list
    if length(AT_Trial)>0 && strcmp(trial_info.status{AT_Trial},'good')
        AT_trial_idx(end+1)=AT_Trial;
    end
end


% List of good motor rake task trials
trial_info_good=[];
for a=1:length(trial_info.overall_trial)
    trial_info_good(end+1)=strcmp(trial_info.status(a,:),'good') && strcmp(trial_info.task(a,:),'motor_task_rake') ;
end
trial_info_good_idx=find(trial_info_good);


%% Why do you need this as strings?
% AT_trial_idx_str_idx={};
% for z=1:length(AT_trial_idx)
%     AT_trial_idx_str=num2str(AT_trial_idx(z));
%     AT_trial_idx_str_idx{end+1}=AT_trial_idx_str;
% end
% 
% trial_info_good_idx_str_idx={};
% for e=1:length(trial_info_good_idx)
%     trial_info_good_idx_str=num2str(trial_info_good_idx(e));
%     trial_info_good_idx_str_idx{end+1}=trial_info_good_idx_str;
% end

%% Oh, so you can use strcmp
data_idx=[];
for n = 1:length(AT_trial_idx)
     %trialmatch = strcmp(trial_info_good_idx_str_idx,AT_trial_idx_str_idx(n));
     %data_idx(end+1)=find(trialmatch);
     
     %% Just do this
     trialmatch=find(trial_info_good_idx==AT_trial_idx(n));
     data_idx(n)=trialmatch;
end

% condition={'motor_rake_center','motor_rake_right','motor_rake_left'};
% trials=zeros(1,length(data.metadata.condition));
% for i=1:length(condition)
%     trials = trials | (strcmp(data.metadata.condition,condition{i}));
% end
% 
% trials=find(trials);
% 
% TOI=[];
% for m=1:length(data_idx)
%     TOI(end+1) = trials(data_idx(m));
% end






 

